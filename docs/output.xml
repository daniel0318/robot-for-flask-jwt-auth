<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20190908 23:13:45.027" rpa="false">
<suite id="s1" name="Tests" source="/home/daniel/restful_project/robot-for-flask-jwt-auth/tests">
<suite id="s1-s1" name="Invalid Login" source="/home/daniel/restful_project/robot-for-flask-jwt-auth/tests/invalid_login.robot">
<test id="s1-s1-t1" name="Invalid Email">
<kw name="Login with Invalid Credentials Should Fail">
<arguments>
<arg>invalid</arg>
<arg>${VALID_PASSWORD}</arg>
</arguments>
<kw name="When Login with ${email} and ${password}" library="resource">
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>/auth/login</arg>
<arg>{ "email": "${email}", "password": "${password}" }</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190908 23:13:45.368" level="INFO">${RES} = {'seconds': 0.007280999999999999, 'status': 404, 'body': {'message': 'User does not exist.', 'status': 'fail'}, 'headers': {'Content-Type': 'application/json', 'Content-Length': '61', 'Access-Control-...</msg>
<status status="PASS" starttime="20190908 23:13:45.344" endtime="20190908 23:13:45.368"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${RES}</arg>
</arguments>
<msg timestamp="20190908 23:13:45.369" level="INFO">${RES} = {'seconds': 0.007280999999999999, 'status': 404, 'body': {'message': 'User does not exist.', 'status': 'fail'}, 'headers': {'Content-Type': 'application/json', 'Content-Length': '61', 'Access-Control-...</msg>
<status status="PASS" starttime="20190908 23:13:45.368" endtime="20190908 23:13:45.369"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:45.343" endtime="20190908 23:13:45.369"></status>
</kw>
<kw name="Then Body Message Is &quot;User does not exist.&quot;" library="resource">
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body message</arg>
<arg>${message}</arg>
</arguments>
<status status="PASS" starttime="20190908 23:13:45.370" endtime="20190908 23:13:45.373"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:45.369" endtime="20190908 23:13:45.373"></status>
</kw>
<kw name="And Body Status Is &quot;fail&quot;" library="resource">
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body status</arg>
<arg>${status_str}</arg>
</arguments>
<status status="PASS" starttime="20190908 23:13:45.375" endtime="20190908 23:13:45.376"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:45.374" endtime="20190908 23:13:45.377"></status>
</kw>
<kw name="And Status Code Is 404" library="resource">
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>${code}</arg>
</arguments>
<status status="PASS" starttime="20190908 23:13:45.377" endtime="20190908 23:13:45.378"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:45.377" endtime="20190908 23:13:45.378"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:45.343" endtime="20190908 23:13:45.378"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:45.342" endtime="20190908 23:13:45.379" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Invalid Password">
<kw name="Login with Invalid Credentials Should Fail">
<arguments>
<arg>${VALID_EMAIL}</arg>
<arg>invalid</arg>
</arguments>
<kw name="When Login with ${email} and ${password}" library="resource">
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>/auth/login</arg>
<arg>{ "email": "${email}", "password": "${password}" }</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190908 23:13:45.390" level="INFO">${RES} = {'seconds': 0.006933, 'status': 404, 'body': {'message': 'User does not exist.', 'status': 'fail'}, 'headers': {'Content-Type': 'application/json', 'Content-Length': '61', 'Access-Control-Allow-Origin...</msg>
<status status="PASS" starttime="20190908 23:13:45.380" endtime="20190908 23:13:45.390"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${RES}</arg>
</arguments>
<msg timestamp="20190908 23:13:45.390" level="INFO">${RES} = {'seconds': 0.006933, 'status': 404, 'body': {'message': 'User does not exist.', 'status': 'fail'}, 'headers': {'Content-Type': 'application/json', 'Content-Length': '61', 'Access-Control-Allow-Origin...</msg>
<status status="PASS" starttime="20190908 23:13:45.390" endtime="20190908 23:13:45.390"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:45.380" endtime="20190908 23:13:45.390"></status>
</kw>
<kw name="Then Body Message Is &quot;User does not exist.&quot;" library="resource">
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body message</arg>
<arg>${message}</arg>
</arguments>
<status status="PASS" starttime="20190908 23:13:45.391" endtime="20190908 23:13:45.392"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:45.391" endtime="20190908 23:13:45.392"></status>
</kw>
<kw name="And Body Status Is &quot;fail&quot;" library="resource">
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body status</arg>
<arg>${status_str}</arg>
</arguments>
<status status="PASS" starttime="20190908 23:13:45.392" endtime="20190908 23:13:45.393"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:45.392" endtime="20190908 23:13:45.393"></status>
</kw>
<kw name="And Status Code Is 404" library="resource">
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>${code}</arg>
</arguments>
<status status="PASS" starttime="20190908 23:13:45.394" endtime="20190908 23:13:45.394"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:45.393" endtime="20190908 23:13:45.394"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:45.379" endtime="20190908 23:13:45.394"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:45.379" endtime="20190908 23:13:45.395" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Invalid Email And Password">
<kw name="Login with Invalid Credentials Should Fail">
<arguments>
<arg>invalid</arg>
<arg>whatever</arg>
</arguments>
<kw name="When Login with ${email} and ${password}" library="resource">
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>/auth/login</arg>
<arg>{ "email": "${email}", "password": "${password}" }</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190908 23:13:45.406" level="INFO">${RES} = {'seconds': 0.007607, 'status': 404, 'body': {'message': 'User does not exist.', 'status': 'fail'}, 'headers': {'Content-Type': 'application/json', 'Content-Length': '61', 'Access-Control-Allow-Origin...</msg>
<status status="PASS" starttime="20190908 23:13:45.396" endtime="20190908 23:13:45.406"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${RES}</arg>
</arguments>
<msg timestamp="20190908 23:13:45.407" level="INFO">${RES} = {'seconds': 0.007607, 'status': 404, 'body': {'message': 'User does not exist.', 'status': 'fail'}, 'headers': {'Content-Type': 'application/json', 'Content-Length': '61', 'Access-Control-Allow-Origin...</msg>
<status status="PASS" starttime="20190908 23:13:45.406" endtime="20190908 23:13:45.407"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:45.396" endtime="20190908 23:13:45.407"></status>
</kw>
<kw name="Then Body Message Is &quot;User does not exist.&quot;" library="resource">
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body message</arg>
<arg>${message}</arg>
</arguments>
<status status="PASS" starttime="20190908 23:13:45.407" endtime="20190908 23:13:45.408"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:45.407" endtime="20190908 23:13:45.408"></status>
</kw>
<kw name="And Body Status Is &quot;fail&quot;" library="resource">
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body status</arg>
<arg>${status_str}</arg>
</arguments>
<status status="PASS" starttime="20190908 23:13:45.409" endtime="20190908 23:13:45.409"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:45.408" endtime="20190908 23:13:45.409"></status>
</kw>
<kw name="And Status Code Is 404" library="resource">
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>${code}</arg>
</arguments>
<status status="PASS" starttime="20190908 23:13:45.410" endtime="20190908 23:13:45.410"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:45.409" endtime="20190908 23:13:45.411"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:45.395" endtime="20190908 23:13:45.411"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:45.395" endtime="20190908 23:13:45.411" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Empty Email">
<kw name="Login with Invalid Credentials Should Fail">
<arguments>
<arg>${EMPTY}</arg>
<arg>${VALID_PASSWORD}</arg>
</arguments>
<kw name="When Login with ${email} and ${password}" library="resource">
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>/auth/login</arg>
<arg>{ "email": "${email}", "password": "${password}" }</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190908 23:13:45.425" level="INFO">${RES} = {'seconds': 0.005692999999999999, 'status': 404, 'body': {'message': 'User does not exist.', 'status': 'fail'}, 'headers': {'Content-Type': 'application/json', 'Content-Length': '61', 'Access-Control-...</msg>
<status status="PASS" starttime="20190908 23:13:45.417" endtime="20190908 23:13:45.426"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${RES}</arg>
</arguments>
<msg timestamp="20190908 23:13:45.426" level="INFO">${RES} = {'seconds': 0.005692999999999999, 'status': 404, 'body': {'message': 'User does not exist.', 'status': 'fail'}, 'headers': {'Content-Type': 'application/json', 'Content-Length': '61', 'Access-Control-...</msg>
<status status="PASS" starttime="20190908 23:13:45.426" endtime="20190908 23:13:45.426"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:45.417" endtime="20190908 23:13:45.426"></status>
</kw>
<kw name="Then Body Message Is &quot;User does not exist.&quot;" library="resource">
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body message</arg>
<arg>${message}</arg>
</arguments>
<status status="PASS" starttime="20190908 23:13:45.427" endtime="20190908 23:13:45.428"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:45.427" endtime="20190908 23:13:45.428"></status>
</kw>
<kw name="And Body Status Is &quot;fail&quot;" library="resource">
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body status</arg>
<arg>${status_str}</arg>
</arguments>
<status status="PASS" starttime="20190908 23:13:45.428" endtime="20190908 23:13:45.429"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:45.428" endtime="20190908 23:13:45.429"></status>
</kw>
<kw name="And Status Code Is 404" library="resource">
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>${code}</arg>
</arguments>
<status status="PASS" starttime="20190908 23:13:45.429" endtime="20190908 23:13:45.430"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:45.429" endtime="20190908 23:13:45.430"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:45.411" endtime="20190908 23:13:45.430"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:45.411" endtime="20190908 23:13:45.430" critical="yes"></status>
</test>
<test id="s1-s1-t5" name="Empty Password">
<kw name="Login with Invalid Credentials Should Fail">
<arguments>
<arg>${VALID_EMAIL}</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="When Login with ${email} and ${password}" library="resource">
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>/auth/login</arg>
<arg>{ "email": "${email}", "password": "${password}" }</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190908 23:13:45.443" level="INFO">${RES} = {'seconds': 0.008162, 'status': 404, 'body': {'message': 'User does not exist.', 'status': 'fail'}, 'headers': {'Content-Type': 'application/json', 'Content-Length': '61', 'Access-Control-Allow-Origin...</msg>
<status status="PASS" starttime="20190908 23:13:45.433" endtime="20190908 23:13:45.444"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${RES}</arg>
</arguments>
<msg timestamp="20190908 23:13:45.444" level="INFO">${RES} = {'seconds': 0.008162, 'status': 404, 'body': {'message': 'User does not exist.', 'status': 'fail'}, 'headers': {'Content-Type': 'application/json', 'Content-Length': '61', 'Access-Control-Allow-Origin...</msg>
<status status="PASS" starttime="20190908 23:13:45.444" endtime="20190908 23:13:45.444"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:45.432" endtime="20190908 23:13:45.444"></status>
</kw>
<kw name="Then Body Message Is &quot;User does not exist.&quot;" library="resource">
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body message</arg>
<arg>${message}</arg>
</arguments>
<status status="PASS" starttime="20190908 23:13:45.445" endtime="20190908 23:13:45.446"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:45.445" endtime="20190908 23:13:45.446"></status>
</kw>
<kw name="And Body Status Is &quot;fail&quot;" library="resource">
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body status</arg>
<arg>${status_str}</arg>
</arguments>
<status status="PASS" starttime="20190908 23:13:45.448" endtime="20190908 23:13:45.449"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:45.447" endtime="20190908 23:13:45.450"></status>
</kw>
<kw name="And Status Code Is 404" library="resource">
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>${code}</arg>
</arguments>
<status status="PASS" starttime="20190908 23:13:45.450" endtime="20190908 23:13:45.451"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:45.450" endtime="20190908 23:13:45.451"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:45.431" endtime="20190908 23:13:45.451"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:45.431" endtime="20190908 23:13:45.452" critical="yes"></status>
</test>
<test id="s1-s1-t6" name="Empty Email And Password">
<kw name="Login with Invalid Credentials Should Fail">
<arguments>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="When Login with ${email} and ${password}" library="resource">
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>/auth/login</arg>
<arg>{ "email": "${email}", "password": "${password}" }</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190908 23:13:45.462" level="INFO">${RES} = {'seconds': 0.005587, 'status': 404, 'body': {'message': 'User does not exist.', 'status': 'fail'}, 'headers': {'Content-Type': 'application/json', 'Content-Length': '61', 'Access-Control-Allow-Origin...</msg>
<status status="PASS" starttime="20190908 23:13:45.453" endtime="20190908 23:13:45.462"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${RES}</arg>
</arguments>
<msg timestamp="20190908 23:13:45.463" level="INFO">${RES} = {'seconds': 0.005587, 'status': 404, 'body': {'message': 'User does not exist.', 'status': 'fail'}, 'headers': {'Content-Type': 'application/json', 'Content-Length': '61', 'Access-Control-Allow-Origin...</msg>
<status status="PASS" starttime="20190908 23:13:45.462" endtime="20190908 23:13:45.463"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:45.453" endtime="20190908 23:13:45.463"></status>
</kw>
<kw name="Then Body Message Is &quot;User does not exist.&quot;" library="resource">
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body message</arg>
<arg>${message}</arg>
</arguments>
<status status="PASS" starttime="20190908 23:13:45.464" endtime="20190908 23:13:45.465"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:45.463" endtime="20190908 23:13:45.465"></status>
</kw>
<kw name="And Body Status Is &quot;fail&quot;" library="resource">
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body status</arg>
<arg>${status_str}</arg>
</arguments>
<status status="PASS" starttime="20190908 23:13:45.466" endtime="20190908 23:13:45.467"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:45.465" endtime="20190908 23:13:45.468"></status>
</kw>
<kw name="And Status Code Is 404" library="resource">
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>${code}</arg>
</arguments>
<status status="PASS" starttime="20190908 23:13:45.469" endtime="20190908 23:13:45.469"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:45.468" endtime="20190908 23:13:45.469"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:45.452" endtime="20190908 23:13:45.470"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:45.452" endtime="20190908 23:13:45.470" critical="yes"></status>
</test>
<doc>Data-driven tests in Login
use variations of invalid login parameters</doc>
<status status="PASS" starttime="20190908 23:13:45.053" endtime="20190908 23:13:45.470"></status>
</suite>
<suite id="s1-s2" name="Invalid Register" source="/home/daniel/restful_project/robot-for-flask-jwt-auth/tests/invalid_register.robot">
<test id="s1-s2-t1" name="Duplicate Register">
<kw name="Given Delete Account &quot;${NEW_EMAIL}&quot; From DB" library="resource">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>psql -d flask_jwt_auth -c "DELETE FROM users WHERE email = '${email}'"</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20190908 23:13:45.479" level="INFO">Running command 'psql -d flask_jwt_auth -c "DELETE FROM users WHERE email = 'daniel@gmail.com'" 2&gt;&amp;1'.</msg>
<msg timestamp="20190908 23:13:45.542" level="INFO">${output} = DELETE 1</msg>
<status status="PASS" starttime="20190908 23:13:45.476" endtime="20190908 23:13:45.542"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190908 23:13:45.543" level="INFO">DELETE 1</msg>
<status status="PASS" starttime="20190908 23:13:45.542" endtime="20190908 23:13:45.543"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:45.476" endtime="20190908 23:13:45.543"></status>
</kw>
<kw name="And Register with ${NEW_EMAIL} and ${NEW_PASSWORD}" library="resource">
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>/auth/register</arg>
<arg>{ "email": "${email}", "password": "${password}" }</arg>
</arguments>
<status status="PASS" starttime="20190908 23:13:45.544" endtime="20190908 23:13:45.560"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:45.544" endtime="20190908 23:13:45.560"></status>
</kw>
<kw name="Then Register with ${NEW_EMAIL} and ${NEW_PASSWORD}" library="resource">
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>/auth/register</arg>
<arg>{ "email": "${email}", "password": "${password}" }</arg>
</arguments>
<status status="PASS" starttime="20190908 23:13:45.561" endtime="20190908 23:13:45.569"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:45.560" endtime="20190908 23:13:45.569"></status>
</kw>
<kw name="Then Body Message Is &quot;User already exists. Please Log in.&quot;" library="resource">
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body message</arg>
<arg>${message}</arg>
</arguments>
<status status="PASS" starttime="20190908 23:13:45.570" endtime="20190908 23:13:45.571"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:45.569" endtime="20190908 23:13:45.571"></status>
</kw>
<kw name="And Body Status Is &quot;fail&quot;" library="resource">
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body status</arg>
<arg>${status_str}</arg>
</arguments>
<status status="PASS" starttime="20190908 23:13:45.572" endtime="20190908 23:13:45.573"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:45.572" endtime="20190908 23:13:45.573"></status>
</kw>
<kw name="And Status Code Is 202" library="resource">
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>${code}</arg>
</arguments>
<status status="PASS" starttime="20190908 23:13:45.573" endtime="20190908 23:13:45.574"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:45.573" endtime="20190908 23:13:45.574"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:45.475" endtime="20190908 23:13:45.574" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Login Without Register First">
<kw name="Given Delete Account &quot;${NEW_EMAIL}&quot; From DB" library="resource">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>psql -d flask_jwt_auth -c "DELETE FROM users WHERE email = '${email}'"</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20190908 23:13:45.578" level="INFO">Running command 'psql -d flask_jwt_auth -c "DELETE FROM users WHERE email = 'daniel@gmail.com'" 2&gt;&amp;1'.</msg>
<msg timestamp="20190908 23:13:45.637" level="INFO">${output} = DELETE 1</msg>
<status status="PASS" starttime="20190908 23:13:45.576" endtime="20190908 23:13:45.638"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190908 23:13:45.639" level="INFO">DELETE 1</msg>
<status status="PASS" starttime="20190908 23:13:45.638" endtime="20190908 23:13:45.639"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:45.575" endtime="20190908 23:13:45.639"></status>
</kw>
<kw name="When Login with ${NEW_EMAIL} and ${NEW_PASSWORD}" library="resource">
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>/auth/login</arg>
<arg>{ "email": "${email}", "password": "${password}" }</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190908 23:13:45.649" level="INFO">${RES} = {'seconds': 0.005692, 'status': 404, 'body': {'message': 'User does not exist.', 'status': 'fail'}, 'headers': {'Content-Type': 'application/json', 'Content-Length': '61', 'Access-Control-Allow-Origin...</msg>
<status status="PASS" starttime="20190908 23:13:45.640" endtime="20190908 23:13:45.649"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${RES}</arg>
</arguments>
<msg timestamp="20190908 23:13:45.649" level="INFO">${RES} = {'seconds': 0.005692, 'status': 404, 'body': {'message': 'User does not exist.', 'status': 'fail'}, 'headers': {'Content-Type': 'application/json', 'Content-Length': '61', 'Access-Control-Allow-Origin...</msg>
<status status="PASS" starttime="20190908 23:13:45.649" endtime="20190908 23:13:45.649"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:45.639" endtime="20190908 23:13:45.650"></status>
</kw>
<kw name="Then Body Message Is &quot;User does not exist.&quot;" library="resource">
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body message</arg>
<arg>${message}</arg>
</arguments>
<status status="PASS" starttime="20190908 23:13:45.651" endtime="20190908 23:13:45.651"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:45.650" endtime="20190908 23:13:45.651"></status>
</kw>
<kw name="And Body Status Is &quot;fail&quot;" library="resource">
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body status</arg>
<arg>${status_str}</arg>
</arguments>
<status status="PASS" starttime="20190908 23:13:45.652" endtime="20190908 23:13:45.653"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:45.652" endtime="20190908 23:13:45.653"></status>
</kw>
<kw name="And Status Code Is 404" library="resource">
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>${code}</arg>
</arguments>
<status status="PASS" starttime="20190908 23:13:45.653" endtime="20190908 23:13:45.654"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:45.653" endtime="20190908 23:13:45.654"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:45.575" endtime="20190908 23:13:45.654" critical="yes"></status>
</test>
<doc>Test timeout functionality</doc>
<status status="PASS" starttime="20190908 23:13:45.471" endtime="20190908 23:13:45.655"></status>
</suite>
<suite id="s1-s3" name="Invalid Token" source="/home/daniel/restful_project/robot-for-flask-jwt-auth/tests/invalid_token.robot">
<test id="s1-s3-t1" name="Malformed Token So Get User Status Fail">
<kw name="Given Get Malformed Token">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${MALFORM_TOKEN}</arg>
</arguments>
<assign>
<var>${AUTH_TOKEN}</var>
</assign>
<msg timestamp="20190908 23:13:45.661" level="INFO">${AUTH_TOKEN} = XXXX.YYYY.ZZZZ</msg>
<status status="PASS" starttime="20190908 23:13:45.660" endtime="20190908 23:13:45.661"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:45.660" endtime="20190908 23:13:45.661"></status>
</kw>
<kw name="When Get User Status" library="resource">
<kw name="Get" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a GET request to the endpoint.*</doc>
<arguments>
<arg>/auth/status</arg>
<arg>headers={ "Authorization": "Bearer ${AUTH_TOKEN}"}</arg>
</arguments>
<status status="PASS" starttime="20190908 23:13:45.661" endtime="20190908 23:13:45.667"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:45.661" endtime="20190908 23:13:45.667"></status>
</kw>
<kw name="Then Body Message Is &quot;Provide a valid auth token.&quot;" library="resource">
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body message</arg>
<arg>${message}</arg>
</arguments>
<status status="PASS" starttime="20190908 23:13:45.668" endtime="20190908 23:13:45.669"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:45.667" endtime="20190908 23:13:45.669"></status>
</kw>
<kw name="And Body Status Is &quot;fail&quot;" library="resource">
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body status</arg>
<arg>${status_str}</arg>
</arguments>
<status status="PASS" starttime="20190908 23:13:45.670" endtime="20190908 23:13:45.671"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:45.669" endtime="20190908 23:13:45.671"></status>
</kw>
<kw name="And Status Code Is 401" library="resource">
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>${code}</arg>
</arguments>
<status status="PASS" starttime="20190908 23:13:45.672" endtime="20190908 23:13:45.673"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:45.672" endtime="20190908 23:13:45.673"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:45.660" endtime="20190908 23:13:45.673" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Malformed Token So Logout Fail">
<kw name="Given Get Malformed Token">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${MALFORM_TOKEN}</arg>
</arguments>
<assign>
<var>${AUTH_TOKEN}</var>
</assign>
<msg timestamp="20190908 23:13:45.675" level="INFO">${AUTH_TOKEN} = XXXX.YYYY.ZZZZ</msg>
<status status="PASS" starttime="20190908 23:13:45.674" endtime="20190908 23:13:45.675"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:45.674" endtime="20190908 23:13:45.675"></status>
</kw>
<kw name="When Get User Status" library="resource">
<kw name="Get" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a GET request to the endpoint.*</doc>
<arguments>
<arg>/auth/status</arg>
<arg>headers={ "Authorization": "Bearer ${AUTH_TOKEN}"}</arg>
</arguments>
<status status="PASS" starttime="20190908 23:13:45.675" endtime="20190908 23:13:45.683"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:45.675" endtime="20190908 23:13:45.683"></status>
</kw>
<kw name="Then Body Message Is &quot;Provide a valid auth token.&quot;" library="resource">
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body message</arg>
<arg>${message}</arg>
</arguments>
<status status="PASS" starttime="20190908 23:13:45.684" endtime="20190908 23:13:45.685"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:45.684" endtime="20190908 23:13:45.685"></status>
</kw>
<kw name="And Body Status Is &quot;fail&quot;" library="resource">
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body status</arg>
<arg>${status_str}</arg>
</arguments>
<status status="PASS" starttime="20190908 23:13:45.686" endtime="20190908 23:13:45.686"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:45.685" endtime="20190908 23:13:45.686"></status>
</kw>
<kw name="And Status Code Is 401" library="resource">
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>${code}</arg>
</arguments>
<status status="PASS" starttime="20190908 23:13:45.687" endtime="20190908 23:13:45.687"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:45.687" endtime="20190908 23:13:45.688"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:45.674" endtime="20190908 23:13:45.688" critical="yes"></status>
</test>
<test id="s1-s3-t3" name="Already Logout So Get User Status Fail">
<kw name="Given Valid Login" library="resource">
<kw name="Login with ${VALID_EMAIL} and ${VALID_PASSWORD}" library="resource">
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>/auth/login</arg>
<arg>{ "email": "${email}", "password": "${password}" }</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190908 23:13:45.700" level="INFO">${RES} = {'seconds': 0.007973, 'status': 200, 'body': {'auth_token': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1Njc5NTU2MzAsImlhdCI6MTU2Nzk1NTYyNSwic3ViIjoxfQ.3TYbTPVwl-p08xScjdAzdKehHv5OLW5GnrSp3-J8D98...</msg>
<status status="PASS" starttime="20190908 23:13:45.689" endtime="20190908 23:13:45.700"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${RES}</arg>
</arguments>
<msg timestamp="20190908 23:13:45.702" level="INFO">${RES} = {'seconds': 0.007973, 'status': 200, 'body': {'auth_token': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1Njc5NTU2MzAsImlhdCI6MTU2Nzk1NTYyNSwic3ViIjoxfQ.3TYbTPVwl-p08xScjdAzdKehHv5OLW5GnrSp3-J8D98...</msg>
<status status="PASS" starttime="20190908 23:13:45.701" endtime="20190908 23:13:45.702"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:45.689" endtime="20190908 23:13:45.702"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:45.689" endtime="20190908 23:13:45.703"></status>
</kw>
<kw name="And Get Token" library="resource">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${RES}[body][auth_token]</arg>
</arguments>
<assign>
<var>${AUTH_TOKEN}</var>
</assign>
<msg timestamp="20190908 23:13:45.704" level="INFO">${AUTH_TOKEN} = eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1Njc5NTU2MzAsImlhdCI6MTU2Nzk1NTYyNSwic3ViIjoxfQ.3TYbTPVwl-p08xScjdAzdKehHv5OLW5GnrSp3-J8D98</msg>
<status status="PASS" starttime="20190908 23:13:45.703" endtime="20190908 23:13:45.704"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${AUTH_TOKEN}</arg>
</arguments>
<msg timestamp="20190908 23:13:45.705" level="INFO">${AUTH_TOKEN} = eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1Njc5NTU2MzAsImlhdCI6MTU2Nzk1NTYyNSwic3ViIjoxfQ.3TYbTPVwl-p08xScjdAzdKehHv5OLW5GnrSp3-J8D98</msg>
<status status="PASS" starttime="20190908 23:13:45.704" endtime="20190908 23:13:45.705"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:45.703" endtime="20190908 23:13:45.705"></status>
</kw>
<kw name="And Logout" library="resource">
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>/auth/logout</arg>
<arg>headers={ "Authorization": "Bearer ${AUTH_TOKEN}"}</arg>
</arguments>
<status status="PASS" starttime="20190908 23:13:45.705" endtime="20190908 23:13:45.720"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:45.705" endtime="20190908 23:13:45.720"></status>
</kw>
<kw name="When Get User Status" library="resource">
<kw name="Get" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a GET request to the endpoint.*</doc>
<arguments>
<arg>/auth/status</arg>
<arg>headers={ "Authorization": "Bearer ${AUTH_TOKEN}"}</arg>
</arguments>
<status status="PASS" starttime="20190908 23:13:45.721" endtime="20190908 23:13:45.729"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:45.720" endtime="20190908 23:13:45.730"></status>
</kw>
<kw name="Then Body Message Is &quot;Token blacklisted. Please log in again.&quot;" library="resource">
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body message</arg>
<arg>${message}</arg>
</arguments>
<status status="PASS" starttime="20190908 23:13:45.730" endtime="20190908 23:13:45.731"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:45.730" endtime="20190908 23:13:45.731"></status>
</kw>
<kw name="And Body Status Is &quot;fail&quot;" library="resource">
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body status</arg>
<arg>${status_str}</arg>
</arguments>
<status status="PASS" starttime="20190908 23:13:45.732" endtime="20190908 23:13:45.732"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:45.731" endtime="20190908 23:13:45.732"></status>
</kw>
<kw name="And Status Code Is 401" library="resource">
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>${code}</arg>
</arguments>
<status status="PASS" starttime="20190908 23:13:45.733" endtime="20190908 23:13:45.734"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:45.733" endtime="20190908 23:13:45.734"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:45.688" endtime="20190908 23:13:45.734" critical="yes"></status>
</test>
<test id="s1-s3-t4" name="Already Logout So Logout Fail">
<kw name="Given Valid Login" library="resource">
<kw name="Login with ${VALID_EMAIL} and ${VALID_PASSWORD}" library="resource">
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>/auth/login</arg>
<arg>{ "email": "${email}", "password": "${password}" }</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190908 23:13:45.745" level="INFO">${RES} = {'seconds': 0.007288, 'status': 200, 'body': {'auth_token': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1Njc5NTU2MzAsImlhdCI6MTU2Nzk1NTYyNSwic3ViIjoxfQ.3TYbTPVwl-p08xScjdAzdKehHv5OLW5GnrSp3-J8D98...</msg>
<status status="PASS" starttime="20190908 23:13:45.735" endtime="20190908 23:13:45.745"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${RES}</arg>
</arguments>
<msg timestamp="20190908 23:13:45.747" level="INFO">${RES} = {'seconds': 0.007288, 'status': 200, 'body': {'auth_token': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1Njc5NTU2MzAsImlhdCI6MTU2Nzk1NTYyNSwic3ViIjoxfQ.3TYbTPVwl-p08xScjdAzdKehHv5OLW5GnrSp3-J8D98...</msg>
<status status="PASS" starttime="20190908 23:13:45.746" endtime="20190908 23:13:45.747"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:45.735" endtime="20190908 23:13:45.747"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:45.735" endtime="20190908 23:13:45.748"></status>
</kw>
<kw name="And Get Token" library="resource">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${RES}[body][auth_token]</arg>
</arguments>
<assign>
<var>${AUTH_TOKEN}</var>
</assign>
<msg timestamp="20190908 23:13:45.750" level="INFO">${AUTH_TOKEN} = eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1Njc5NTU2MzAsImlhdCI6MTU2Nzk1NTYyNSwic3ViIjoxfQ.3TYbTPVwl-p08xScjdAzdKehHv5OLW5GnrSp3-J8D98</msg>
<status status="PASS" starttime="20190908 23:13:45.750" endtime="20190908 23:13:45.750"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${AUTH_TOKEN}</arg>
</arguments>
<msg timestamp="20190908 23:13:45.751" level="INFO">${AUTH_TOKEN} = eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1Njc5NTU2MzAsImlhdCI6MTU2Nzk1NTYyNSwic3ViIjoxfQ.3TYbTPVwl-p08xScjdAzdKehHv5OLW5GnrSp3-J8D98</msg>
<status status="PASS" starttime="20190908 23:13:45.750" endtime="20190908 23:13:45.751"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:45.748" endtime="20190908 23:13:45.751"></status>
</kw>
<kw name="And Logout" library="resource">
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>/auth/logout</arg>
<arg>headers={ "Authorization": "Bearer ${AUTH_TOKEN}"}</arg>
</arguments>
<status status="PASS" starttime="20190908 23:13:45.751" endtime="20190908 23:13:45.759"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:45.751" endtime="20190908 23:13:45.759"></status>
</kw>
<kw name="When Logout" library="resource">
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>/auth/logout</arg>
<arg>headers={ "Authorization": "Bearer ${AUTH_TOKEN}"}</arg>
</arguments>
<status status="PASS" starttime="20190908 23:13:45.761" endtime="20190908 23:13:45.771"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:45.760" endtime="20190908 23:13:45.771"></status>
</kw>
<kw name="Then Body Message Is &quot;Token blacklisted. Please log in again.&quot;" library="resource">
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body message</arg>
<arg>${message}</arg>
</arguments>
<status status="PASS" starttime="20190908 23:13:45.772" endtime="20190908 23:13:45.772"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:45.771" endtime="20190908 23:13:45.772"></status>
</kw>
<kw name="And Body Status Is &quot;fail&quot;" library="resource">
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body status</arg>
<arg>${status_str}</arg>
</arguments>
<status status="PASS" starttime="20190908 23:13:45.773" endtime="20190908 23:13:45.774"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:45.773" endtime="20190908 23:13:45.774"></status>
</kw>
<kw name="And Status Code Is 401" library="resource">
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>${code}</arg>
</arguments>
<status status="PASS" starttime="20190908 23:13:45.774" endtime="20190908 23:13:45.775"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:45.774" endtime="20190908 23:13:45.775"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:45.734" endtime="20190908 23:13:45.775" critical="yes"></status>
</test>
<test id="s1-s3-t5" name="Token Timeout So Get User Status Fail">
<kw name="Given Valid Login" library="resource">
<kw name="Login with ${VALID_EMAIL} and ${VALID_PASSWORD}" library="resource">
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>/auth/login</arg>
<arg>{ "email": "${email}", "password": "${password}" }</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190908 23:13:45.790" level="INFO">${RES} = {'seconds': 0.01082, 'status': 200, 'body': {'auth_token': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1Njc5NTU2MzAsImlhdCI6MTU2Nzk1NTYyNSwic3ViIjoxfQ.3TYbTPVwl-p08xScjdAzdKehHv5OLW5GnrSp3-J8D98'...</msg>
<status status="PASS" starttime="20190908 23:13:45.777" endtime="20190908 23:13:45.790"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${RES}</arg>
</arguments>
<msg timestamp="20190908 23:13:45.791" level="INFO">${RES} = {'seconds': 0.01082, 'status': 200, 'body': {'auth_token': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1Njc5NTU2MzAsImlhdCI6MTU2Nzk1NTYyNSwic3ViIjoxfQ.3TYbTPVwl-p08xScjdAzdKehHv5OLW5GnrSp3-J8D98'...</msg>
<status status="PASS" starttime="20190908 23:13:45.791" endtime="20190908 23:13:45.791"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:45.776" endtime="20190908 23:13:45.792"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:45.776" endtime="20190908 23:13:45.792"></status>
</kw>
<kw name="And Get Token" library="resource">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${RES}[body][auth_token]</arg>
</arguments>
<assign>
<var>${AUTH_TOKEN}</var>
</assign>
<msg timestamp="20190908 23:13:45.793" level="INFO">${AUTH_TOKEN} = eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1Njc5NTU2MzAsImlhdCI6MTU2Nzk1NTYyNSwic3ViIjoxfQ.3TYbTPVwl-p08xScjdAzdKehHv5OLW5GnrSp3-J8D98</msg>
<status status="PASS" starttime="20190908 23:13:45.793" endtime="20190908 23:13:45.793"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${AUTH_TOKEN}</arg>
</arguments>
<msg timestamp="20190908 23:13:45.794" level="INFO">${AUTH_TOKEN} = eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1Njc5NTU2MzAsImlhdCI6MTU2Nzk1NTYyNSwic3ViIjoxfQ.3TYbTPVwl-p08xScjdAzdKehHv5OLW5GnrSp3-J8D98</msg>
<status status="PASS" starttime="20190908 23:13:45.793" endtime="20190908 23:13:45.794"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:45.792" endtime="20190908 23:13:45.794"></status>
</kw>
<kw name="When Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${TOKEN_TIMEOUT} seconds</arg>
</arguments>
<msg timestamp="20190908 23:13:51.795" level="INFO">Slept 6 seconds</msg>
<status status="PASS" starttime="20190908 23:13:45.794" endtime="20190908 23:13:51.796"></status>
</kw>
<kw name="And Get User Status" library="resource">
<kw name="Get" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a GET request to the endpoint.*</doc>
<arguments>
<arg>/auth/status</arg>
<arg>headers={ "Authorization": "Bearer ${AUTH_TOKEN}"}</arg>
</arguments>
<status status="PASS" starttime="20190908 23:13:51.797" endtime="20190908 23:13:51.806"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:51.796" endtime="20190908 23:13:51.806"></status>
</kw>
<kw name="Then Body Message Is &quot;Signature expired. Please log in again.&quot;" library="resource">
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body message</arg>
<arg>${message}</arg>
</arguments>
<status status="PASS" starttime="20190908 23:13:51.807" endtime="20190908 23:13:51.808"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:51.807" endtime="20190908 23:13:51.808"></status>
</kw>
<kw name="And Body Status Is &quot;fail&quot;" library="resource">
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body status</arg>
<arg>${status_str}</arg>
</arguments>
<status status="PASS" starttime="20190908 23:13:51.809" endtime="20190908 23:13:51.809"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:51.808" endtime="20190908 23:13:51.809"></status>
</kw>
<kw name="And Status Code Is 401" library="resource">
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>${code}</arg>
</arguments>
<status status="PASS" starttime="20190908 23:13:51.810" endtime="20190908 23:13:51.811"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:51.810" endtime="20190908 23:13:51.811"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:45.776" endtime="20190908 23:13:51.811" critical="yes"></status>
</test>
<test id="s1-s3-t6" name="Token Timeout So Logout Fail">
<kw name="Given Valid Login" library="resource">
<kw name="Login with ${VALID_EMAIL} and ${VALID_PASSWORD}" library="resource">
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>/auth/login</arg>
<arg>{ "email": "${email}", "password": "${password}" }</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190908 23:13:51.822" level="INFO">${RES} = {'seconds': 0.0075910000000000005, 'status': 200, 'body': {'auth_token': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1Njc5NTU2MzYsImlhdCI6MTU2Nzk1NTYzMSwic3ViIjoxfQ.a0IuQ1R5hWmHaRLpMhhrsf6D_izQ70...</msg>
<status status="PASS" starttime="20190908 23:13:51.812" endtime="20190908 23:13:51.822"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${RES}</arg>
</arguments>
<msg timestamp="20190908 23:13:51.823" level="INFO">${RES} = {'seconds': 0.0075910000000000005, 'status': 200, 'body': {'auth_token': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1Njc5NTU2MzYsImlhdCI6MTU2Nzk1NTYzMSwic3ViIjoxfQ.a0IuQ1R5hWmHaRLpMhhrsf6D_izQ70...</msg>
<status status="PASS" starttime="20190908 23:13:51.823" endtime="20190908 23:13:51.823"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:51.812" endtime="20190908 23:13:51.823"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:51.812" endtime="20190908 23:13:51.823"></status>
</kw>
<kw name="And Get Token" library="resource">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${RES}[body][auth_token]</arg>
</arguments>
<assign>
<var>${AUTH_TOKEN}</var>
</assign>
<msg timestamp="20190908 23:13:51.825" level="INFO">${AUTH_TOKEN} = eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1Njc5NTU2MzYsImlhdCI6MTU2Nzk1NTYzMSwic3ViIjoxfQ.a0IuQ1R5hWmHaRLpMhhrsf6D_izQ70TCCK4V_0dxG48</msg>
<status status="PASS" starttime="20190908 23:13:51.824" endtime="20190908 23:13:51.825"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${AUTH_TOKEN}</arg>
</arguments>
<msg timestamp="20190908 23:13:51.826" level="INFO">${AUTH_TOKEN} = eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1Njc5NTU2MzYsImlhdCI6MTU2Nzk1NTYzMSwic3ViIjoxfQ.a0IuQ1R5hWmHaRLpMhhrsf6D_izQ70TCCK4V_0dxG48</msg>
<status status="PASS" starttime="20190908 23:13:51.825" endtime="20190908 23:13:51.826"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:51.824" endtime="20190908 23:13:51.826"></status>
</kw>
<kw name="When Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${TOKEN_TIMEOUT} seconds</arg>
</arguments>
<msg timestamp="20190908 23:13:57.827" level="INFO">Slept 6 seconds</msg>
<status status="PASS" starttime="20190908 23:13:51.826" endtime="20190908 23:13:57.828"></status>
</kw>
<kw name="And Logout" library="resource">
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>/auth/logout</arg>
<arg>headers={ "Authorization": "Bearer ${AUTH_TOKEN}"}</arg>
</arguments>
<status status="PASS" starttime="20190908 23:13:57.830" endtime="20190908 23:13:57.838"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:57.829" endtime="20190908 23:13:57.839"></status>
</kw>
<kw name="Then Body Message Is &quot;Signature expired. Please log in again.&quot;" library="resource">
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body message</arg>
<arg>${message}</arg>
</arguments>
<status status="PASS" starttime="20190908 23:13:57.840" endtime="20190908 23:13:57.840"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:57.839" endtime="20190908 23:13:57.840"></status>
</kw>
<kw name="And Body Status Is &quot;fail&quot;" library="resource">
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body status</arg>
<arg>${status_str}</arg>
</arguments>
<status status="PASS" starttime="20190908 23:13:57.841" endtime="20190908 23:13:57.842"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:57.841" endtime="20190908 23:13:57.842"></status>
</kw>
<kw name="And Status Code Is 401" library="resource">
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>${code}</arg>
</arguments>
<status status="PASS" starttime="20190908 23:13:57.842" endtime="20190908 23:13:57.843"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:57.842" endtime="20190908 23:13:57.843"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:51.811" endtime="20190908 23:13:57.843" critical="yes"></status>
</test>
<doc>Test timeout functionality</doc>
<status status="PASS" starttime="20190908 23:13:45.656" endtime="20190908 23:13:57.844"></status>
</suite>
<suite id="s1-s4" name="Valid Api" source="/home/daniel/restful_project/robot-for-flask-jwt-auth/tests/valid_api.robot">
<test id="s1-s4-t1" name="Register A New Account">
<kw name="Given Delete Account &quot;${NEW_EMAIL}&quot; From DB" library="resource">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>psql -d flask_jwt_auth -c "DELETE FROM users WHERE email = '${email}'"</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20190908 23:13:57.853" level="INFO">Running command 'psql -d flask_jwt_auth -c "DELETE FROM users WHERE email = 'daniel@gmail.com'" 2&gt;&amp;1'.</msg>
<msg timestamp="20190908 23:13:57.907" level="INFO">${output} = DELETE 0</msg>
<status status="PASS" starttime="20190908 23:13:57.851" endtime="20190908 23:13:57.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190908 23:13:57.908" level="INFO">DELETE 0</msg>
<status status="PASS" starttime="20190908 23:13:57.907" endtime="20190908 23:13:57.908"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:57.850" endtime="20190908 23:13:57.908"></status>
</kw>
<kw name="When Register with ${NEW_EMAIL} and ${NEW_PASSWORD}" library="resource">
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>/auth/register</arg>
<arg>{ "email": "${email}", "password": "${password}" }</arg>
</arguments>
<status status="PASS" starttime="20190908 23:13:57.909" endtime="20190908 23:13:57.928"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:57.909" endtime="20190908 23:13:57.928"></status>
</kw>
<kw name="Then Body Message Is &quot;Successfully registered.&quot;" library="resource">
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body message</arg>
<arg>${message}</arg>
</arguments>
<status status="PASS" starttime="20190908 23:13:57.929" endtime="20190908 23:13:57.929"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:57.928" endtime="20190908 23:13:57.930"></status>
</kw>
<kw name="And Body Status Is &quot;success&quot;" library="resource">
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body status</arg>
<arg>${status_str}</arg>
</arguments>
<status status="PASS" starttime="20190908 23:13:57.930" endtime="20190908 23:13:57.931"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:57.930" endtime="20190908 23:13:57.931"></status>
</kw>
<kw name="And Status Code Is 201" library="resource">
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>${code}</arg>
</arguments>
<status status="PASS" starttime="20190908 23:13:57.931" endtime="20190908 23:13:57.932"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:57.931" endtime="20190908 23:13:57.932"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:57.850" endtime="20190908 23:13:57.932" critical="yes"></status>
</test>
<test id="s1-s4-t2" name="Valid Login">
<kw name="When Valid Login" library="resource">
<kw name="Login with ${VALID_EMAIL} and ${VALID_PASSWORD}" library="resource">
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>/auth/login</arg>
<arg>{ "email": "${email}", "password": "${password}" }</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190908 23:13:57.946" level="INFO">${RES} = {'seconds': 0.008631, 'status': 200, 'body': {'auth_token': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1Njc5NTU2NDIsImlhdCI6MTU2Nzk1NTYzNywic3ViIjoxfQ.kb5n5NWpHZwNzCV_d7ToV6K6Ss78i9LMCmmvDojBbmc...</msg>
<status status="PASS" starttime="20190908 23:13:57.934" endtime="20190908 23:13:57.946"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${RES}</arg>
</arguments>
<msg timestamp="20190908 23:13:57.946" level="INFO">${RES} = {'seconds': 0.008631, 'status': 200, 'body': {'auth_token': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1Njc5NTU2NDIsImlhdCI6MTU2Nzk1NTYzNywic3ViIjoxfQ.kb5n5NWpHZwNzCV_d7ToV6K6Ss78i9LMCmmvDojBbmc...</msg>
<status status="PASS" starttime="20190908 23:13:57.946" endtime="20190908 23:13:57.946"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:57.934" endtime="20190908 23:13:57.947"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:57.933" endtime="20190908 23:13:57.947"></status>
</kw>
<kw name="Then Body Message Is &quot;Successfully logged in.&quot;" library="resource">
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body message</arg>
<arg>${message}</arg>
</arguments>
<status status="PASS" starttime="20190908 23:13:57.947" endtime="20190908 23:13:57.948"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:57.947" endtime="20190908 23:13:57.948"></status>
</kw>
<kw name="And Body Status Is &quot;success&quot;" library="resource">
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body status</arg>
<arg>${status_str}</arg>
</arguments>
<status status="PASS" starttime="20190908 23:13:57.949" endtime="20190908 23:13:57.951"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:57.948" endtime="20190908 23:13:57.952"></status>
</kw>
<kw name="And Status Code Is 200" library="resource">
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>${code}</arg>
</arguments>
<status status="PASS" starttime="20190908 23:13:57.953" endtime="20190908 23:13:57.954"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:57.953" endtime="20190908 23:13:57.954"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:57.933" endtime="20190908 23:13:57.955" critical="yes"></status>
</test>
<test id="s1-s4-t3" name="Valid Get User Status">
<kw name="Given Valid Login" library="resource">
<kw name="Login with ${VALID_EMAIL} and ${VALID_PASSWORD}" library="resource">
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>/auth/login</arg>
<arg>{ "email": "${email}", "password": "${password}" }</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190908 23:13:57.966" level="INFO">${RES} = {'seconds': 0.006777999999999999, 'status': 200, 'body': {'auth_token': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1Njc5NTU2NDIsImlhdCI6MTU2Nzk1NTYzNywic3ViIjoxfQ.kb5n5NWpHZwNzCV_d7ToV6K6Ss78i9L...</msg>
<status status="PASS" starttime="20190908 23:13:57.956" endtime="20190908 23:13:57.966"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${RES}</arg>
</arguments>
<msg timestamp="20190908 23:13:57.966" level="INFO">${RES} = {'seconds': 0.006777999999999999, 'status': 200, 'body': {'auth_token': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1Njc5NTU2NDIsImlhdCI6MTU2Nzk1NTYzNywic3ViIjoxfQ.kb5n5NWpHZwNzCV_d7ToV6K6Ss78i9L...</msg>
<status status="PASS" starttime="20190908 23:13:57.966" endtime="20190908 23:13:57.967"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:57.956" endtime="20190908 23:13:57.967"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:57.955" endtime="20190908 23:13:57.967"></status>
</kw>
<kw name="And Get Token" library="resource">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${RES}[body][auth_token]</arg>
</arguments>
<assign>
<var>${AUTH_TOKEN}</var>
</assign>
<msg timestamp="20190908 23:13:57.968" level="INFO">${AUTH_TOKEN} = eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1Njc5NTU2NDIsImlhdCI6MTU2Nzk1NTYzNywic3ViIjoxfQ.kb5n5NWpHZwNzCV_d7ToV6K6Ss78i9LMCmmvDojBbmc</msg>
<status status="PASS" starttime="20190908 23:13:57.968" endtime="20190908 23:13:57.969"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${AUTH_TOKEN}</arg>
</arguments>
<msg timestamp="20190908 23:13:57.969" level="INFO">${AUTH_TOKEN} = eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1Njc5NTU2NDIsImlhdCI6MTU2Nzk1NTYzNywic3ViIjoxfQ.kb5n5NWpHZwNzCV_d7ToV6K6Ss78i9LMCmmvDojBbmc</msg>
<status status="PASS" starttime="20190908 23:13:57.969" endtime="20190908 23:13:57.969"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:57.967" endtime="20190908 23:13:57.969"></status>
</kw>
<kw name="When Get User Status" library="resource">
<kw name="Get" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a GET request to the endpoint.*</doc>
<arguments>
<arg>/auth/status</arg>
<arg>headers={ "Authorization": "Bearer ${AUTH_TOKEN}"}</arg>
</arguments>
<status status="PASS" starttime="20190908 23:13:57.971" endtime="20190908 23:13:57.980"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:57.970" endtime="20190908 23:13:57.980"></status>
</kw>
<kw name="Then Match Email(&quot;${VALID_EMAIL}&quot;) from User Status" library="resource">
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data email</arg>
<arg>${email}</arg>
</arguments>
<status status="PASS" starttime="20190908 23:13:57.981" endtime="20190908 23:13:57.983"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:57.980" endtime="20190908 23:13:57.983"></status>
</kw>
<kw name="And Body Status Is &quot;success&quot;" library="resource">
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body status</arg>
<arg>${status_str}</arg>
</arguments>
<status status="PASS" starttime="20190908 23:13:57.986" endtime="20190908 23:13:57.986"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:57.984" endtime="20190908 23:13:57.987"></status>
</kw>
<kw name="And Status Code Is 200" library="resource">
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>${code}</arg>
</arguments>
<status status="PASS" starttime="20190908 23:13:57.987" endtime="20190908 23:13:57.988"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:57.987" endtime="20190908 23:13:57.988"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:57.955" endtime="20190908 23:13:57.988" critical="yes"></status>
</test>
<test id="s1-s4-t4" name="Valid Logout">
<kw name="Given Valid Login" library="resource">
<kw name="Login with ${VALID_EMAIL} and ${VALID_PASSWORD}" library="resource">
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>/auth/login</arg>
<arg>{ "email": "${email}", "password": "${password}" }</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190908 23:13:58.000" level="INFO">${RES} = {'seconds': 0.007392999999999999, 'status': 200, 'body': {'auth_token': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1Njc5NTU2NDIsImlhdCI6MTU2Nzk1NTYzNywic3ViIjoxfQ.kb5n5NWpHZwNzCV_d7ToV6K6Ss78i9L...</msg>
<status status="PASS" starttime="20190908 23:13:57.990" endtime="20190908 23:13:58.000"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${RES}</arg>
</arguments>
<msg timestamp="20190908 23:13:58.001" level="INFO">${RES} = {'seconds': 0.007392999999999999, 'status': 200, 'body': {'auth_token': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1Njc5NTU2NDIsImlhdCI6MTU2Nzk1NTYzNywic3ViIjoxfQ.kb5n5NWpHZwNzCV_d7ToV6K6Ss78i9L...</msg>
<status status="PASS" starttime="20190908 23:13:58.000" endtime="20190908 23:13:58.001"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:57.989" endtime="20190908 23:13:58.001"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:57.989" endtime="20190908 23:13:58.001"></status>
</kw>
<kw name="And Get Token" library="resource">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${RES}[body][auth_token]</arg>
</arguments>
<assign>
<var>${AUTH_TOKEN}</var>
</assign>
<msg timestamp="20190908 23:13:58.003" level="INFO">${AUTH_TOKEN} = eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1Njc5NTU2NDIsImlhdCI6MTU2Nzk1NTYzNywic3ViIjoxfQ.kb5n5NWpHZwNzCV_d7ToV6K6Ss78i9LMCmmvDojBbmc</msg>
<status status="PASS" starttime="20190908 23:13:58.003" endtime="20190908 23:13:58.003"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${AUTH_TOKEN}</arg>
</arguments>
<msg timestamp="20190908 23:13:58.003" level="INFO">${AUTH_TOKEN} = eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1Njc5NTU2NDIsImlhdCI6MTU2Nzk1NTYzNywic3ViIjoxfQ.kb5n5NWpHZwNzCV_d7ToV6K6Ss78i9LMCmmvDojBbmc</msg>
<status status="PASS" starttime="20190908 23:13:58.003" endtime="20190908 23:13:58.003"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:58.002" endtime="20190908 23:13:58.003"></status>
</kw>
<kw name="When Logout" library="resource">
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>/auth/logout</arg>
<arg>headers={ "Authorization": "Bearer ${AUTH_TOKEN}"}</arg>
</arguments>
<status status="PASS" starttime="20190908 23:13:58.004" endtime="20190908 23:13:58.015"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:58.004" endtime="20190908 23:13:58.015"></status>
</kw>
<kw name="Then Body Status Is &quot;success&quot;" library="resource">
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body status</arg>
<arg>${status_str}</arg>
</arguments>
<status status="PASS" starttime="20190908 23:13:58.017" endtime="20190908 23:13:58.019"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:58.015" endtime="20190908 23:13:58.019"></status>
</kw>
<kw name="And Status Code Is 200" library="resource">
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>${code}</arg>
</arguments>
<status status="PASS" starttime="20190908 23:13:58.020" endtime="20190908 23:13:58.021"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:58.020" endtime="20190908 23:13:58.021"></status>
</kw>
<status status="PASS" starttime="20190908 23:13:57.988" endtime="20190908 23:13:58.021" critical="yes"></status>
</test>
<doc>Workflow test suite on 5 API provided by the server
Note Register will delete previous email account.</doc>
<status status="PASS" starttime="20190908 23:13:57.846" endtime="20190908 23:13:58.022"></status>
</suite>
<status status="PASS" starttime="20190908 23:13:45.028" endtime="20190908 23:13:58.024"></status>
</suite>
<statistics>
<total>
<stat pass="18" fail="0">Critical Tests</stat>
<stat pass="18" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="18" fail="0" id="s1" name="Tests">Tests</stat>
<stat pass="6" fail="0" id="s1-s1" name="Invalid Login">Tests.Invalid Login</stat>
<stat pass="2" fail="0" id="s1-s2" name="Invalid Register">Tests.Invalid Register</stat>
<stat pass="6" fail="0" id="s1-s3" name="Invalid Token">Tests.Invalid Token</stat>
<stat pass="4" fail="0" id="s1-s4" name="Valid Api">Tests.Valid Api</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
