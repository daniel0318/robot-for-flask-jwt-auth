<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20190908 17:54:06.810" rpa="false">
<suite id="s1" name="Tests" source="/home/daniel/restful_project/robot-for-flask-jwt-auth/tests">
<suite id="s1-s1" name="Invalid Login" source="/home/daniel/restful_project/robot-for-flask-jwt-auth/tests/invalid_login.robot">
<test id="s1-s1-t1" name="Invalid Email">
<kw name="Login with Invalid Credentials Should Fail">
<arguments>
<arg>invalid</arg>
<arg>${VALID_PASSWORD}</arg>
</arguments>
<kw name="When Login with ${email} and ${password}" library="resource">
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>/auth/login</arg>
<arg>{ "email": "${email}", "password": "${password}" }</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190908 17:54:07.155" level="INFO">${RES} = {'seconds': 0.006614, 'status': 404, 'body': {'message': 'User does not exist.', 'status': 'fail'}, 'headers': {'Content-Type': 'application/json', 'Content-Length': '61', 'Access-Control-Allow-Origin...</msg>
<status status="PASS" starttime="20190908 17:54:07.123" endtime="20190908 17:54:07.155"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${RES}</arg>
</arguments>
<msg timestamp="20190908 17:54:07.156" level="INFO">${RES} = {'seconds': 0.006614, 'status': 404, 'body': {'message': 'User does not exist.', 'status': 'fail'}, 'headers': {'Content-Type': 'application/json', 'Content-Length': '61', 'Access-Control-Allow-Origin...</msg>
<status status="PASS" starttime="20190908 17:54:07.155" endtime="20190908 17:54:07.156"></status>
</kw>
<status status="PASS" starttime="20190908 17:54:07.122" endtime="20190908 17:54:07.156"></status>
</kw>
<kw name="Then Body Message Is &quot;User does not exist.&quot;" library="resource">
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body message</arg>
<arg>${message}</arg>
</arguments>
<status status="PASS" starttime="20190908 17:54:07.157" endtime="20190908 17:54:07.158"></status>
</kw>
<status status="PASS" starttime="20190908 17:54:07.156" endtime="20190908 17:54:07.158"></status>
</kw>
<kw name="And Body Status Is &quot;fail&quot;" library="resource">
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body status</arg>
<arg>${status_str}</arg>
</arguments>
<status status="PASS" starttime="20190908 17:54:07.160" endtime="20190908 17:54:07.163"></status>
</kw>
<status status="PASS" starttime="20190908 17:54:07.158" endtime="20190908 17:54:07.163"></status>
</kw>
<kw name="And Status Code Is 404" library="resource">
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>${code}</arg>
</arguments>
<status status="PASS" starttime="20190908 17:54:07.164" endtime="20190908 17:54:07.164"></status>
</kw>
<status status="PASS" starttime="20190908 17:54:07.163" endtime="20190908 17:54:07.165"></status>
</kw>
<status status="PASS" starttime="20190908 17:54:07.122" endtime="20190908 17:54:07.165"></status>
</kw>
<status status="PASS" starttime="20190908 17:54:07.121" endtime="20190908 17:54:07.165" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Invalid Password">
<kw name="Login with Invalid Credentials Should Fail">
<arguments>
<arg>${VALID_EMAIL}</arg>
<arg>invalid</arg>
</arguments>
<kw name="When Login with ${email} and ${password}" library="resource">
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>/auth/login</arg>
<arg>{ "email": "${email}", "password": "${password}" }</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190908 17:54:07.177" level="INFO">${RES} = {'seconds': 0.008268000000000001, 'status': 404, 'body': {'message': 'User does not exist.', 'status': 'fail'}, 'headers': {'Content-Type': 'application/json', 'Content-Length': '61', 'Access-Control-...</msg>
<status status="PASS" starttime="20190908 17:54:07.167" endtime="20190908 17:54:07.177"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${RES}</arg>
</arguments>
<msg timestamp="20190908 17:54:07.178" level="INFO">${RES} = {'seconds': 0.008268000000000001, 'status': 404, 'body': {'message': 'User does not exist.', 'status': 'fail'}, 'headers': {'Content-Type': 'application/json', 'Content-Length': '61', 'Access-Control-...</msg>
<status status="PASS" starttime="20190908 17:54:07.178" endtime="20190908 17:54:07.178"></status>
</kw>
<status status="PASS" starttime="20190908 17:54:07.166" endtime="20190908 17:54:07.178"></status>
</kw>
<kw name="Then Body Message Is &quot;User does not exist.&quot;" library="resource">
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body message</arg>
<arg>${message}</arg>
</arguments>
<status status="PASS" starttime="20190908 17:54:07.179" endtime="20190908 17:54:07.180"></status>
</kw>
<status status="PASS" starttime="20190908 17:54:07.178" endtime="20190908 17:54:07.180"></status>
</kw>
<kw name="And Body Status Is &quot;fail&quot;" library="resource">
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body status</arg>
<arg>${status_str}</arg>
</arguments>
<status status="PASS" starttime="20190908 17:54:07.181" endtime="20190908 17:54:07.181"></status>
</kw>
<status status="PASS" starttime="20190908 17:54:07.180" endtime="20190908 17:54:07.182"></status>
</kw>
<kw name="And Status Code Is 404" library="resource">
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>${code}</arg>
</arguments>
<status status="PASS" starttime="20190908 17:54:07.182" endtime="20190908 17:54:07.184"></status>
</kw>
<status status="PASS" starttime="20190908 17:54:07.182" endtime="20190908 17:54:07.185"></status>
</kw>
<status status="PASS" starttime="20190908 17:54:07.166" endtime="20190908 17:54:07.185"></status>
</kw>
<status status="PASS" starttime="20190908 17:54:07.165" endtime="20190908 17:54:07.186" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Invalid Email And Password">
<kw name="Login with Invalid Credentials Should Fail">
<arguments>
<arg>invalid</arg>
<arg>whatever</arg>
</arguments>
<kw name="When Login with ${email} and ${password}" library="resource">
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>/auth/login</arg>
<arg>{ "email": "${email}", "password": "${password}" }</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190908 17:54:07.200" level="INFO">${RES} = {'seconds': 0.009555, 'status': 404, 'body': {'message': 'User does not exist.', 'status': 'fail'}, 'headers': {'Content-Type': 'application/json', 'Content-Length': '61', 'Access-Control-Allow-Origin...</msg>
<status status="PASS" starttime="20190908 17:54:07.188" endtime="20190908 17:54:07.200"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${RES}</arg>
</arguments>
<msg timestamp="20190908 17:54:07.201" level="INFO">${RES} = {'seconds': 0.009555, 'status': 404, 'body': {'message': 'User does not exist.', 'status': 'fail'}, 'headers': {'Content-Type': 'application/json', 'Content-Length': '61', 'Access-Control-Allow-Origin...</msg>
<status status="PASS" starttime="20190908 17:54:07.200" endtime="20190908 17:54:07.201"></status>
</kw>
<status status="PASS" starttime="20190908 17:54:07.187" endtime="20190908 17:54:07.201"></status>
</kw>
<kw name="Then Body Message Is &quot;User does not exist.&quot;" library="resource">
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body message</arg>
<arg>${message}</arg>
</arguments>
<status status="PASS" starttime="20190908 17:54:07.202" endtime="20190908 17:54:07.202"></status>
</kw>
<status status="PASS" starttime="20190908 17:54:07.201" endtime="20190908 17:54:07.203"></status>
</kw>
<kw name="And Body Status Is &quot;fail&quot;" library="resource">
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body status</arg>
<arg>${status_str}</arg>
</arguments>
<status status="PASS" starttime="20190908 17:54:07.203" endtime="20190908 17:54:07.204"></status>
</kw>
<status status="PASS" starttime="20190908 17:54:07.203" endtime="20190908 17:54:07.204"></status>
</kw>
<kw name="And Status Code Is 404" library="resource">
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>${code}</arg>
</arguments>
<status status="PASS" starttime="20190908 17:54:07.204" endtime="20190908 17:54:07.205"></status>
</kw>
<status status="PASS" starttime="20190908 17:54:07.204" endtime="20190908 17:54:07.205"></status>
</kw>
<status status="PASS" starttime="20190908 17:54:07.187" endtime="20190908 17:54:07.205"></status>
</kw>
<status status="PASS" starttime="20190908 17:54:07.186" endtime="20190908 17:54:07.205" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Empty Email">
<kw name="Login with Invalid Credentials Should Fail">
<arguments>
<arg>${EMPTY}</arg>
<arg>${VALID_PASSWORD}</arg>
</arguments>
<kw name="When Login with ${email} and ${password}" library="resource">
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>/auth/login</arg>
<arg>{ "email": "${email}", "password": "${password}" }</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190908 17:54:07.218" level="INFO">${RES} = {'seconds': 0.008726000000000001, 'status': 404, 'body': {'message': 'User does not exist.', 'status': 'fail'}, 'headers': {'Content-Type': 'application/json', 'Content-Length': '61', 'Access-Control-...</msg>
<status status="PASS" starttime="20190908 17:54:07.207" endtime="20190908 17:54:07.218"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${RES}</arg>
</arguments>
<msg timestamp="20190908 17:54:07.219" level="INFO">${RES} = {'seconds': 0.008726000000000001, 'status': 404, 'body': {'message': 'User does not exist.', 'status': 'fail'}, 'headers': {'Content-Type': 'application/json', 'Content-Length': '61', 'Access-Control-...</msg>
<status status="PASS" starttime="20190908 17:54:07.219" endtime="20190908 17:54:07.219"></status>
</kw>
<status status="PASS" starttime="20190908 17:54:07.207" endtime="20190908 17:54:07.219"></status>
</kw>
<kw name="Then Body Message Is &quot;User does not exist.&quot;" library="resource">
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body message</arg>
<arg>${message}</arg>
</arguments>
<status status="PASS" starttime="20190908 17:54:07.220" endtime="20190908 17:54:07.221"></status>
</kw>
<status status="PASS" starttime="20190908 17:54:07.219" endtime="20190908 17:54:07.221"></status>
</kw>
<kw name="And Body Status Is &quot;fail&quot;" library="resource">
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body status</arg>
<arg>${status_str}</arg>
</arguments>
<status status="PASS" starttime="20190908 17:54:07.221" endtime="20190908 17:54:07.222"></status>
</kw>
<status status="PASS" starttime="20190908 17:54:07.221" endtime="20190908 17:54:07.222"></status>
</kw>
<kw name="And Status Code Is 404" library="resource">
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>${code}</arg>
</arguments>
<status status="PASS" starttime="20190908 17:54:07.222" endtime="20190908 17:54:07.223"></status>
</kw>
<status status="PASS" starttime="20190908 17:54:07.222" endtime="20190908 17:54:07.223"></status>
</kw>
<status status="PASS" starttime="20190908 17:54:07.206" endtime="20190908 17:54:07.223"></status>
</kw>
<status status="PASS" starttime="20190908 17:54:07.206" endtime="20190908 17:54:07.223" critical="yes"></status>
</test>
<test id="s1-s1-t5" name="Empty Password">
<kw name="Login with Invalid Credentials Should Fail">
<arguments>
<arg>${VALID_EMAIL}</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="When Login with ${email} and ${password}" library="resource">
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>/auth/login</arg>
<arg>{ "email": "${email}", "password": "${password}" }</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190908 17:54:07.238" level="INFO">${RES} = {'seconds': 0.011253, 'status': 404, 'body': {'message': 'User does not exist.', 'status': 'fail'}, 'headers': {'Content-Type': 'application/json', 'Content-Length': '61', 'Access-Control-Allow-Origin...</msg>
<status status="PASS" starttime="20190908 17:54:07.225" endtime="20190908 17:54:07.238"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${RES}</arg>
</arguments>
<msg timestamp="20190908 17:54:07.239" level="INFO">${RES} = {'seconds': 0.011253, 'status': 404, 'body': {'message': 'User does not exist.', 'status': 'fail'}, 'headers': {'Content-Type': 'application/json', 'Content-Length': '61', 'Access-Control-Allow-Origin...</msg>
<status status="PASS" starttime="20190908 17:54:07.239" endtime="20190908 17:54:07.239"></status>
</kw>
<status status="PASS" starttime="20190908 17:54:07.225" endtime="20190908 17:54:07.239"></status>
</kw>
<kw name="Then Body Message Is &quot;User does not exist.&quot;" library="resource">
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body message</arg>
<arg>${message}</arg>
</arguments>
<status status="PASS" starttime="20190908 17:54:07.240" endtime="20190908 17:54:07.240"></status>
</kw>
<status status="PASS" starttime="20190908 17:54:07.239" endtime="20190908 17:54:07.240"></status>
</kw>
<kw name="And Body Status Is &quot;fail&quot;" library="resource">
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body status</arg>
<arg>${status_str}</arg>
</arguments>
<status status="PASS" starttime="20190908 17:54:07.241" endtime="20190908 17:54:07.242"></status>
</kw>
<status status="PASS" starttime="20190908 17:54:07.241" endtime="20190908 17:54:07.242"></status>
</kw>
<kw name="And Status Code Is 404" library="resource">
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>${code}</arg>
</arguments>
<status status="PASS" starttime="20190908 17:54:07.243" endtime="20190908 17:54:07.244"></status>
</kw>
<status status="PASS" starttime="20190908 17:54:07.242" endtime="20190908 17:54:07.244"></status>
</kw>
<status status="PASS" starttime="20190908 17:54:07.224" endtime="20190908 17:54:07.244"></status>
</kw>
<status status="PASS" starttime="20190908 17:54:07.224" endtime="20190908 17:54:07.244" critical="yes"></status>
</test>
<test id="s1-s1-t6" name="Empty Email And Password">
<kw name="Login with Invalid Credentials Should Fail">
<arguments>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="When Login with ${email} and ${password}" library="resource">
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>/auth/login</arg>
<arg>{ "email": "${email}", "password": "${password}" }</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190908 17:54:07.257" level="INFO">${RES} = {'seconds': 0.005951, 'status': 404, 'body': {'message': 'User does not exist.', 'status': 'fail'}, 'headers': {'Content-Type': 'application/json', 'Content-Length': '61', 'Access-Control-Allow-Origin...</msg>
<status status="PASS" starttime="20190908 17:54:07.249" endtime="20190908 17:54:07.257"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${RES}</arg>
</arguments>
<msg timestamp="20190908 17:54:07.258" level="INFO">${RES} = {'seconds': 0.005951, 'status': 404, 'body': {'message': 'User does not exist.', 'status': 'fail'}, 'headers': {'Content-Type': 'application/json', 'Content-Length': '61', 'Access-Control-Allow-Origin...</msg>
<status status="PASS" starttime="20190908 17:54:07.258" endtime="20190908 17:54:07.258"></status>
</kw>
<status status="PASS" starttime="20190908 17:54:07.247" endtime="20190908 17:54:07.258"></status>
</kw>
<kw name="Then Body Message Is &quot;User does not exist.&quot;" library="resource">
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body message</arg>
<arg>${message}</arg>
</arguments>
<status status="PASS" starttime="20190908 17:54:07.259" endtime="20190908 17:54:07.259"></status>
</kw>
<status status="PASS" starttime="20190908 17:54:07.258" endtime="20190908 17:54:07.260"></status>
</kw>
<kw name="And Body Status Is &quot;fail&quot;" library="resource">
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body status</arg>
<arg>${status_str}</arg>
</arguments>
<status status="PASS" starttime="20190908 17:54:07.260" endtime="20190908 17:54:07.261"></status>
</kw>
<status status="PASS" starttime="20190908 17:54:07.260" endtime="20190908 17:54:07.261"></status>
</kw>
<kw name="And Status Code Is 404" library="resource">
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>${code}</arg>
</arguments>
<status status="PASS" starttime="20190908 17:54:07.262" endtime="20190908 17:54:07.265"></status>
</kw>
<status status="PASS" starttime="20190908 17:54:07.261" endtime="20190908 17:54:07.266"></status>
</kw>
<status status="PASS" starttime="20190908 17:54:07.246" endtime="20190908 17:54:07.266"></status>
</kw>
<status status="PASS" starttime="20190908 17:54:07.245" endtime="20190908 17:54:07.266" critical="yes"></status>
</test>
<doc>Data-driven tests in Login
use variations of invalid login parameters</doc>
<status status="PASS" starttime="20190908 17:54:06.837" endtime="20190908 17:54:07.267"></status>
</suite>
<suite id="s1-s2" name="Token Timeout" source="/home/daniel/restful_project/robot-for-flask-jwt-auth/tests/token_timeout.robot">
<test id="s1-s2-t1" name="Should Get User Status Before Timeout">
<kw name="Given Valid Login" library="resource">
<kw name="Login with ${VALID_EMAIL} and ${VALID_PASSWORD}" library="resource">
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>/auth/login</arg>
<arg>{ "email": "${email}", "password": "${password}" }</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190908 17:54:07.287" level="INFO">${RES} = {'seconds': 0.010437, 'status': 200, 'body': {'auth_token': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1Njc5MzY0NTIsImlhdCI6MTU2NzkzNjQ0Nywic3ViIjoxfQ.qjmK5BOQKQMe8MhHblsIBORAw62nBkMg6J0vJ7527ro...</msg>
<status status="PASS" starttime="20190908 17:54:07.273" endtime="20190908 17:54:07.287"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${RES}</arg>
</arguments>
<msg timestamp="20190908 17:54:07.287" level="INFO">${RES} = {'seconds': 0.010437, 'status': 200, 'body': {'auth_token': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1Njc5MzY0NTIsImlhdCI6MTU2NzkzNjQ0Nywic3ViIjoxfQ.qjmK5BOQKQMe8MhHblsIBORAw62nBkMg6J0vJ7527ro...</msg>
<status status="PASS" starttime="20190908 17:54:07.287" endtime="20190908 17:54:07.288"></status>
</kw>
<status status="PASS" starttime="20190908 17:54:07.272" endtime="20190908 17:54:07.288"></status>
</kw>
<status status="PASS" starttime="20190908 17:54:07.272" endtime="20190908 17:54:07.288"></status>
</kw>
<kw name="And Get Token" library="resource">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${RES}[body][auth_token]</arg>
</arguments>
<assign>
<var>${AUTH_TOKEN}</var>
</assign>
<msg timestamp="20190908 17:54:07.289" level="INFO">${AUTH_TOKEN} = eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1Njc5MzY0NTIsImlhdCI6MTU2NzkzNjQ0Nywic3ViIjoxfQ.qjmK5BOQKQMe8MhHblsIBORAw62nBkMg6J0vJ7527ro</msg>
<status status="PASS" starttime="20190908 17:54:07.288" endtime="20190908 17:54:07.289"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${AUTH_TOKEN}</arg>
</arguments>
<msg timestamp="20190908 17:54:07.289" level="INFO">${AUTH_TOKEN} = eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1Njc5MzY0NTIsImlhdCI6MTU2NzkzNjQ0Nywic3ViIjoxfQ.qjmK5BOQKQMe8MhHblsIBORAw62nBkMg6J0vJ7527ro</msg>
<status status="PASS" starttime="20190908 17:54:07.289" endtime="20190908 17:54:07.289"></status>
</kw>
<status status="PASS" starttime="20190908 17:54:07.288" endtime="20190908 17:54:07.289"></status>
</kw>
<kw name="When Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${TOKEN_LEGAL_TIME} seconds</arg>
</arguments>
<msg timestamp="20190908 17:54:11.290" level="INFO">Slept 4 seconds</msg>
<status status="PASS" starttime="20190908 17:54:07.290" endtime="20190908 17:54:11.291"></status>
</kw>
<kw name="And Get User Status" library="resource">
<kw name="Get" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a GET request to the endpoint.*</doc>
<arguments>
<arg>/auth/status</arg>
<arg>headers={ "Authorization": "Bearer ${AUTH_TOKEN}"}</arg>
</arguments>
<status status="PASS" starttime="20190908 17:54:11.293" endtime="20190908 17:54:11.310"></status>
</kw>
<status status="PASS" starttime="20190908 17:54:11.292" endtime="20190908 17:54:11.310"></status>
</kw>
<kw name="Then Match Email(&quot;${VALID_EMAIL}&quot;) from User Status" library="resource">
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data email</arg>
<arg>${email}</arg>
</arguments>
<status status="PASS" starttime="20190908 17:54:11.311" endtime="20190908 17:54:11.311"></status>
</kw>
<status status="PASS" starttime="20190908 17:54:11.310" endtime="20190908 17:54:11.311"></status>
</kw>
<kw name="And Body Status Is &quot;success&quot;" library="resource">
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body status</arg>
<arg>${status_str}</arg>
</arguments>
<status status="PASS" starttime="20190908 17:54:11.312" endtime="20190908 17:54:11.313"></status>
</kw>
<status status="PASS" starttime="20190908 17:54:11.312" endtime="20190908 17:54:11.313"></status>
</kw>
<kw name="And Status Code Is 200" library="resource">
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>${code}</arg>
</arguments>
<status status="PASS" starttime="20190908 17:54:11.313" endtime="20190908 17:54:11.314"></status>
</kw>
<status status="PASS" starttime="20190908 17:54:11.313" endtime="20190908 17:54:11.314"></status>
</kw>
<status status="PASS" starttime="20190908 17:54:07.272" endtime="20190908 17:54:11.314" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Cannot Get User Status Because Of Timeout">
<kw name="Given Valid Login" library="resource">
<kw name="Login with ${VALID_EMAIL} and ${VALID_PASSWORD}" library="resource">
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>/auth/login</arg>
<arg>{ "email": "${email}", "password": "${password}" }</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190908 17:54:11.334" level="INFO">${RES} = {'seconds': 0.013866, 'status': 200, 'body': {'auth_token': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1Njc5MzY0NTYsImlhdCI6MTU2NzkzNjQ1MSwic3ViIjoxfQ.qS1SFVaL9iV4eF4GNQDxrIXRpMiXU4BzJPvPzRR5oKA...</msg>
<status status="PASS" starttime="20190908 17:54:11.316" endtime="20190908 17:54:11.334"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${RES}</arg>
</arguments>
<msg timestamp="20190908 17:54:11.334" level="INFO">${RES} = {'seconds': 0.013866, 'status': 200, 'body': {'auth_token': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1Njc5MzY0NTYsImlhdCI6MTU2NzkzNjQ1MSwic3ViIjoxfQ.qS1SFVaL9iV4eF4GNQDxrIXRpMiXU4BzJPvPzRR5oKA...</msg>
<status status="PASS" starttime="20190908 17:54:11.334" endtime="20190908 17:54:11.335"></status>
</kw>
<status status="PASS" starttime="20190908 17:54:11.315" endtime="20190908 17:54:11.335"></status>
</kw>
<status status="PASS" starttime="20190908 17:54:11.315" endtime="20190908 17:54:11.335"></status>
</kw>
<kw name="And Get Token" library="resource">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${RES}[body][auth_token]</arg>
</arguments>
<assign>
<var>${AUTH_TOKEN}</var>
</assign>
<msg timestamp="20190908 17:54:11.336" level="INFO">${AUTH_TOKEN} = eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1Njc5MzY0NTYsImlhdCI6MTU2NzkzNjQ1MSwic3ViIjoxfQ.qS1SFVaL9iV4eF4GNQDxrIXRpMiXU4BzJPvPzRR5oKA</msg>
<status status="PASS" starttime="20190908 17:54:11.335" endtime="20190908 17:54:11.336"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${AUTH_TOKEN}</arg>
</arguments>
<msg timestamp="20190908 17:54:11.336" level="INFO">${AUTH_TOKEN} = eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1Njc5MzY0NTYsImlhdCI6MTU2NzkzNjQ1MSwic3ViIjoxfQ.qS1SFVaL9iV4eF4GNQDxrIXRpMiXU4BzJPvPzRR5oKA</msg>
<status status="PASS" starttime="20190908 17:54:11.336" endtime="20190908 17:54:11.336"></status>
</kw>
<status status="PASS" starttime="20190908 17:54:11.335" endtime="20190908 17:54:11.336"></status>
</kw>
<kw name="When Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${TOKEN_TIMEOUT} seconds</arg>
</arguments>
<msg timestamp="20190908 17:54:17.337" level="INFO">Slept 6 seconds</msg>
<status status="PASS" starttime="20190908 17:54:11.337" endtime="20190908 17:54:17.338"></status>
</kw>
<kw name="And Get User Status" library="resource">
<kw name="Get" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a GET request to the endpoint.*</doc>
<arguments>
<arg>/auth/status</arg>
<arg>headers={ "Authorization": "Bearer ${AUTH_TOKEN}"}</arg>
</arguments>
<status status="PASS" starttime="20190908 17:54:17.339" endtime="20190908 17:54:17.347"></status>
</kw>
<status status="PASS" starttime="20190908 17:54:17.338" endtime="20190908 17:54:17.348"></status>
</kw>
<kw name="Then Body Message Is &quot;Signature expired. Please log in again.&quot;" library="resource">
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body message</arg>
<arg>${message}</arg>
</arguments>
<status status="PASS" starttime="20190908 17:54:17.349" endtime="20190908 17:54:17.349"></status>
</kw>
<status status="PASS" starttime="20190908 17:54:17.348" endtime="20190908 17:54:17.349"></status>
</kw>
<kw name="And Body Status Is &quot;fail&quot;" library="resource">
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body status</arg>
<arg>${status_str}</arg>
</arguments>
<status status="PASS" starttime="20190908 17:54:17.350" endtime="20190908 17:54:17.351"></status>
</kw>
<status status="PASS" starttime="20190908 17:54:17.350" endtime="20190908 17:54:17.351"></status>
</kw>
<kw name="And Status Code Is 401" library="resource">
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>${code}</arg>
</arguments>
<status status="PASS" starttime="20190908 17:54:17.351" endtime="20190908 17:54:17.352"></status>
</kw>
<status status="PASS" starttime="20190908 17:54:17.351" endtime="20190908 17:54:17.352"></status>
</kw>
<status status="PASS" starttime="20190908 17:54:11.315" endtime="20190908 17:54:17.352" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="No Need to Logout If Already Timeout">
<kw name="Given Valid Login" library="resource">
<kw name="Login with ${VALID_EMAIL} and ${VALID_PASSWORD}" library="resource">
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>/auth/login</arg>
<arg>{ "email": "${email}", "password": "${password}" }</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190908 17:54:17.363" level="INFO">${RES} = {'seconds': 0.006723, 'status': 200, 'body': {'auth_token': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1Njc5MzY0NjIsImlhdCI6MTU2NzkzNjQ1Nywic3ViIjoxfQ.IVirYq5mt3YW82tOb37faEQoaW3WUGBCx5EmseKf9ZM...</msg>
<status status="PASS" starttime="20190908 17:54:17.354" endtime="20190908 17:54:17.363"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${RES}</arg>
</arguments>
<msg timestamp="20190908 17:54:17.363" level="INFO">${RES} = {'seconds': 0.006723, 'status': 200, 'body': {'auth_token': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1Njc5MzY0NjIsImlhdCI6MTU2NzkzNjQ1Nywic3ViIjoxfQ.IVirYq5mt3YW82tOb37faEQoaW3WUGBCx5EmseKf9ZM...</msg>
<status status="PASS" starttime="20190908 17:54:17.363" endtime="20190908 17:54:17.364"></status>
</kw>
<status status="PASS" starttime="20190908 17:54:17.353" endtime="20190908 17:54:17.364"></status>
</kw>
<status status="PASS" starttime="20190908 17:54:17.353" endtime="20190908 17:54:17.364"></status>
</kw>
<kw name="And Get Token" library="resource">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${RES}[body][auth_token]</arg>
</arguments>
<assign>
<var>${AUTH_TOKEN}</var>
</assign>
<msg timestamp="20190908 17:54:17.365" level="INFO">${AUTH_TOKEN} = eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1Njc5MzY0NjIsImlhdCI6MTU2NzkzNjQ1Nywic3ViIjoxfQ.IVirYq5mt3YW82tOb37faEQoaW3WUGBCx5EmseKf9ZM</msg>
<status status="PASS" starttime="20190908 17:54:17.364" endtime="20190908 17:54:17.365"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${AUTH_TOKEN}</arg>
</arguments>
<msg timestamp="20190908 17:54:17.365" level="INFO">${AUTH_TOKEN} = eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1Njc5MzY0NjIsImlhdCI6MTU2NzkzNjQ1Nywic3ViIjoxfQ.IVirYq5mt3YW82tOb37faEQoaW3WUGBCx5EmseKf9ZM</msg>
<status status="PASS" starttime="20190908 17:54:17.365" endtime="20190908 17:54:17.365"></status>
</kw>
<status status="PASS" starttime="20190908 17:54:17.364" endtime="20190908 17:54:17.365"></status>
</kw>
<kw name="When Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${TOKEN_TIMEOUT} seconds</arg>
</arguments>
<msg timestamp="20190908 17:54:23.367" level="INFO">Slept 6 seconds</msg>
<status status="PASS" starttime="20190908 17:54:17.366" endtime="20190908 17:54:23.367"></status>
</kw>
<kw name="And Logout" library="resource">
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>/auth/logout</arg>
<arg>headers={ "Authorization": "Bearer ${AUTH_TOKEN}"}</arg>
</arguments>
<status status="PASS" starttime="20190908 17:54:23.368" endtime="20190908 17:54:23.376"></status>
</kw>
<status status="PASS" starttime="20190908 17:54:23.367" endtime="20190908 17:54:23.376"></status>
</kw>
<kw name="Then Body Message Is &quot;Signature expired. Please log in again.&quot;" library="resource">
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body message</arg>
<arg>${message}</arg>
</arguments>
<status status="PASS" starttime="20190908 17:54:23.377" endtime="20190908 17:54:23.377"></status>
</kw>
<status status="PASS" starttime="20190908 17:54:23.376" endtime="20190908 17:54:23.378"></status>
</kw>
<kw name="And Body Status Is &quot;fail&quot;" library="resource">
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body status</arg>
<arg>${status_str}</arg>
</arguments>
<status status="PASS" starttime="20190908 17:54:23.379" endtime="20190908 17:54:23.379"></status>
</kw>
<status status="PASS" starttime="20190908 17:54:23.378" endtime="20190908 17:54:23.380"></status>
</kw>
<kw name="And Status Code Is 401" library="resource">
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>${code}</arg>
</arguments>
<status status="PASS" starttime="20190908 17:54:23.380" endtime="20190908 17:54:23.381"></status>
</kw>
<status status="PASS" starttime="20190908 17:54:23.380" endtime="20190908 17:54:23.381"></status>
</kw>
<status status="PASS" starttime="20190908 17:54:17.353" endtime="20190908 17:54:23.381" critical="yes"></status>
</test>
<doc>Test timeout functionality</doc>
<status status="PASS" starttime="20190908 17:54:07.268" endtime="20190908 17:54:23.382"></status>
</suite>
<suite id="s1-s3" name="Valid Api" source="/home/daniel/restful_project/robot-for-flask-jwt-auth/tests/valid_api.robot">
<test id="s1-s3-t1" name="Valid Register">
<kw name="Given Delete Credential &quot;${NEW_EMAIL}&quot; From DB">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>psql -d flask_jwt_auth -c "DELETE FROM users WHERE email = '${email}'"</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20190908 17:54:23.418" level="INFO">Running command 'psql -d flask_jwt_auth -c "DELETE FROM users WHERE email = 'daniel@gmail.com'" 2&gt;&amp;1'.</msg>
<msg timestamp="20190908 17:54:23.487" level="INFO">${output} = DELETE 1</msg>
<status status="PASS" starttime="20190908 17:54:23.414" endtime="20190908 17:54:23.487"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190908 17:54:23.489" level="INFO">DELETE 1</msg>
<status status="PASS" starttime="20190908 17:54:23.488" endtime="20190908 17:54:23.489"></status>
</kw>
<status status="PASS" starttime="20190908 17:54:23.413" endtime="20190908 17:54:23.489"></status>
</kw>
<kw name="When Register with ${NEW_EMAIL} and ${NEW_PASSWORD}" library="resource">
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>/auth/register</arg>
<arg>{ "email": "${email}", "password": "${password}" }</arg>
</arguments>
<status status="PASS" starttime="20190908 17:54:23.490" endtime="20190908 17:54:23.518"></status>
</kw>
<status status="PASS" starttime="20190908 17:54:23.489" endtime="20190908 17:54:23.518"></status>
</kw>
<kw name="Then Body Message Is &quot;Successfully registered.&quot;" library="resource">
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body message</arg>
<arg>${message}</arg>
</arguments>
<status status="PASS" starttime="20190908 17:54:23.519" endtime="20190908 17:54:23.521"></status>
</kw>
<status status="PASS" starttime="20190908 17:54:23.519" endtime="20190908 17:54:23.521"></status>
</kw>
<kw name="And Body Status Is &quot;success&quot;" library="resource">
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body status</arg>
<arg>${status_str}</arg>
</arguments>
<status status="PASS" starttime="20190908 17:54:23.522" endtime="20190908 17:54:23.523"></status>
</kw>
<status status="PASS" starttime="20190908 17:54:23.522" endtime="20190908 17:54:23.524"></status>
</kw>
<kw name="And Status Code Is 201" library="resource">
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>${code}</arg>
</arguments>
<status status="PASS" starttime="20190908 17:54:23.525" endtime="20190908 17:54:23.526"></status>
</kw>
<status status="PASS" starttime="20190908 17:54:23.524" endtime="20190908 17:54:23.526"></status>
</kw>
<status status="PASS" starttime="20190908 17:54:23.412" endtime="20190908 17:54:23.526" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Valid Login">
<kw name="When Valid Login" library="resource">
<kw name="Login with ${VALID_EMAIL} and ${VALID_PASSWORD}" library="resource">
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>/auth/login</arg>
<arg>{ "email": "${email}", "password": "${password}" }</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190908 17:54:23.564" level="INFO">${RES} = {'seconds': 0.017431000000000002, 'status': 200, 'body': {'auth_token': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1Njc5MzY0NjgsImlhdCI6MTU2NzkzNjQ2Mywic3ViIjoxfQ.Se8E-zYsBz94qtnWUWNQfs4mBbcQ0hv...</msg>
<status status="PASS" starttime="20190908 17:54:23.542" endtime="20190908 17:54:23.565"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${RES}</arg>
</arguments>
<msg timestamp="20190908 17:54:23.566" level="INFO">${RES} = {'seconds': 0.017431000000000002, 'status': 200, 'body': {'auth_token': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1Njc5MzY0NjgsImlhdCI6MTU2NzkzNjQ2Mywic3ViIjoxfQ.Se8E-zYsBz94qtnWUWNQfs4mBbcQ0hv...</msg>
<status status="PASS" starttime="20190908 17:54:23.565" endtime="20190908 17:54:23.566"></status>
</kw>
<status status="PASS" starttime="20190908 17:54:23.542" endtime="20190908 17:54:23.567"></status>
</kw>
<status status="PASS" starttime="20190908 17:54:23.541" endtime="20190908 17:54:23.567"></status>
</kw>
<kw name="Then Body Message Is &quot;Successfully logged in.&quot;" library="resource">
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body message</arg>
<arg>${message}</arg>
</arguments>
<status status="PASS" starttime="20190908 17:54:23.570" endtime="20190908 17:54:23.571"></status>
</kw>
<status status="PASS" starttime="20190908 17:54:23.569" endtime="20190908 17:54:23.571"></status>
</kw>
<kw name="And Body Status Is &quot;success&quot;" library="resource">
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body status</arg>
<arg>${status_str}</arg>
</arguments>
<status status="PASS" starttime="20190908 17:54:23.572" endtime="20190908 17:54:23.573"></status>
</kw>
<status status="PASS" starttime="20190908 17:54:23.572" endtime="20190908 17:54:23.574"></status>
</kw>
<kw name="And Status Code Is 200" library="resource">
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>${code}</arg>
</arguments>
<status status="PASS" starttime="20190908 17:54:23.575" endtime="20190908 17:54:23.576"></status>
</kw>
<status status="PASS" starttime="20190908 17:54:23.574" endtime="20190908 17:54:23.576"></status>
</kw>
<status status="PASS" starttime="20190908 17:54:23.540" endtime="20190908 17:54:23.578" critical="yes"></status>
</test>
<test id="s1-s3-t3" name="Valid Get User Status">
<kw name="Given Valid Login" library="resource">
<kw name="Login with ${VALID_EMAIL} and ${VALID_PASSWORD}" library="resource">
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>/auth/login</arg>
<arg>{ "email": "${email}", "password": "${password}" }</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190908 17:54:23.601" level="INFO">${RES} = {'seconds': 0.011112, 'status': 200, 'body': {'auth_token': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1Njc5MzY0NjgsImlhdCI6MTU2NzkzNjQ2Mywic3ViIjoxfQ.Se8E-zYsBz94qtnWUWNQfs4mBbcQ0hv-wCSU8tbhgXY...</msg>
<status status="PASS" starttime="20190908 17:54:23.585" endtime="20190908 17:54:23.602"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${RES}</arg>
</arguments>
<msg timestamp="20190908 17:54:23.602" level="INFO">${RES} = {'seconds': 0.011112, 'status': 200, 'body': {'auth_token': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1Njc5MzY0NjgsImlhdCI6MTU2NzkzNjQ2Mywic3ViIjoxfQ.Se8E-zYsBz94qtnWUWNQfs4mBbcQ0hv-wCSU8tbhgXY...</msg>
<status status="PASS" starttime="20190908 17:54:23.602" endtime="20190908 17:54:23.602"></status>
</kw>
<status status="PASS" starttime="20190908 17:54:23.581" endtime="20190908 17:54:23.603"></status>
</kw>
<status status="PASS" starttime="20190908 17:54:23.580" endtime="20190908 17:54:23.603"></status>
</kw>
<kw name="And Get Token" library="resource">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${RES}[body][auth_token]</arg>
</arguments>
<assign>
<var>${AUTH_TOKEN}</var>
</assign>
<msg timestamp="20190908 17:54:23.604" level="INFO">${AUTH_TOKEN} = eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1Njc5MzY0NjgsImlhdCI6MTU2NzkzNjQ2Mywic3ViIjoxfQ.Se8E-zYsBz94qtnWUWNQfs4mBbcQ0hv-wCSU8tbhgXY</msg>
<status status="PASS" starttime="20190908 17:54:23.604" endtime="20190908 17:54:23.604"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${AUTH_TOKEN}</arg>
</arguments>
<msg timestamp="20190908 17:54:23.605" level="INFO">${AUTH_TOKEN} = eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1Njc5MzY0NjgsImlhdCI6MTU2NzkzNjQ2Mywic3ViIjoxfQ.Se8E-zYsBz94qtnWUWNQfs4mBbcQ0hv-wCSU8tbhgXY</msg>
<status status="PASS" starttime="20190908 17:54:23.605" endtime="20190908 17:54:23.605"></status>
</kw>
<status status="PASS" starttime="20190908 17:54:23.603" endtime="20190908 17:54:23.605"></status>
</kw>
<kw name="When Get User Status" library="resource">
<kw name="Get" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a GET request to the endpoint.*</doc>
<arguments>
<arg>/auth/status</arg>
<arg>headers={ "Authorization": "Bearer ${AUTH_TOKEN}"}</arg>
</arguments>
<status status="PASS" starttime="20190908 17:54:23.606" endtime="20190908 17:54:23.624"></status>
</kw>
<status status="PASS" starttime="20190908 17:54:23.606" endtime="20190908 17:54:23.624"></status>
</kw>
<kw name="Then Match Email(&quot;${VALID_EMAIL}&quot;) from User Status" library="resource">
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data email</arg>
<arg>${email}</arg>
</arguments>
<status status="PASS" starttime="20190908 17:54:23.625" endtime="20190908 17:54:23.625"></status>
</kw>
<status status="PASS" starttime="20190908 17:54:23.624" endtime="20190908 17:54:23.626"></status>
</kw>
<kw name="And Body Status Is &quot;success&quot;" library="resource">
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body status</arg>
<arg>${status_str}</arg>
</arguments>
<status status="PASS" starttime="20190908 17:54:23.626" endtime="20190908 17:54:23.627"></status>
</kw>
<status status="PASS" starttime="20190908 17:54:23.626" endtime="20190908 17:54:23.627"></status>
</kw>
<kw name="And Status Code Is 200" library="resource">
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>${code}</arg>
</arguments>
<status status="PASS" starttime="20190908 17:54:23.628" endtime="20190908 17:54:23.629"></status>
</kw>
<status status="PASS" starttime="20190908 17:54:23.628" endtime="20190908 17:54:23.629"></status>
</kw>
<status status="PASS" starttime="20190908 17:54:23.579" endtime="20190908 17:54:23.629" critical="yes"></status>
</test>
<test id="s1-s3-t4" name="Valid Logout">
<kw name="Given Valid Login" library="resource">
<kw name="Login with ${VALID_EMAIL} and ${VALID_PASSWORD}" library="resource">
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>/auth/login</arg>
<arg>{ "email": "${email}", "password": "${password}" }</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190908 17:54:23.642" level="INFO">${RES} = {'seconds': 0.008731, 'status': 200, 'body': {'auth_token': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1Njc5MzY0NjgsImlhdCI6MTU2NzkzNjQ2Mywic3ViIjoxfQ.Se8E-zYsBz94qtnWUWNQfs4mBbcQ0hv-wCSU8tbhgXY...</msg>
<status status="PASS" starttime="20190908 17:54:23.631" endtime="20190908 17:54:23.642"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${RES}</arg>
</arguments>
<msg timestamp="20190908 17:54:23.643" level="INFO">${RES} = {'seconds': 0.008731, 'status': 200, 'body': {'auth_token': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1Njc5MzY0NjgsImlhdCI6MTU2NzkzNjQ2Mywic3ViIjoxfQ.Se8E-zYsBz94qtnWUWNQfs4mBbcQ0hv-wCSU8tbhgXY...</msg>
<status status="PASS" starttime="20190908 17:54:23.643" endtime="20190908 17:54:23.643"></status>
</kw>
<status status="PASS" starttime="20190908 17:54:23.630" endtime="20190908 17:54:23.643"></status>
</kw>
<status status="PASS" starttime="20190908 17:54:23.630" endtime="20190908 17:54:23.643"></status>
</kw>
<kw name="And Get Token" library="resource">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${RES}[body][auth_token]</arg>
</arguments>
<assign>
<var>${AUTH_TOKEN}</var>
</assign>
<msg timestamp="20190908 17:54:23.645" level="INFO">${AUTH_TOKEN} = eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1Njc5MzY0NjgsImlhdCI6MTU2NzkzNjQ2Mywic3ViIjoxfQ.Se8E-zYsBz94qtnWUWNQfs4mBbcQ0hv-wCSU8tbhgXY</msg>
<status status="PASS" starttime="20190908 17:54:23.644" endtime="20190908 17:54:23.645"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${AUTH_TOKEN}</arg>
</arguments>
<msg timestamp="20190908 17:54:23.645" level="INFO">${AUTH_TOKEN} = eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1Njc5MzY0NjgsImlhdCI6MTU2NzkzNjQ2Mywic3ViIjoxfQ.Se8E-zYsBz94qtnWUWNQfs4mBbcQ0hv-wCSU8tbhgXY</msg>
<status status="PASS" starttime="20190908 17:54:23.645" endtime="20190908 17:54:23.645"></status>
</kw>
<status status="PASS" starttime="20190908 17:54:23.644" endtime="20190908 17:54:23.645"></status>
</kw>
<kw name="When Logout" library="resource">
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>/auth/logout</arg>
<arg>headers={ "Authorization": "Bearer ${AUTH_TOKEN}"}</arg>
</arguments>
<status status="PASS" starttime="20190908 17:54:23.646" endtime="20190908 17:54:23.666"></status>
</kw>
<status status="PASS" starttime="20190908 17:54:23.646" endtime="20190908 17:54:23.666"></status>
</kw>
<kw name="Then Body Status Is &quot;success&quot;" library="resource">
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body status</arg>
<arg>${status_str}</arg>
</arguments>
<status status="PASS" starttime="20190908 17:54:23.667" endtime="20190908 17:54:23.668"></status>
</kw>
<status status="PASS" starttime="20190908 17:54:23.667" endtime="20190908 17:54:23.669"></status>
</kw>
<kw name="And Status Code Is 200" library="resource">
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>${code}</arg>
</arguments>
<status status="PASS" starttime="20190908 17:54:23.670" endtime="20190908 17:54:23.671"></status>
</kw>
<status status="PASS" starttime="20190908 17:54:23.669" endtime="20190908 17:54:23.671"></status>
</kw>
<status status="PASS" starttime="20190908 17:54:23.630" endtime="20190908 17:54:23.671" critical="yes"></status>
</test>
<doc>Workflow test suite on 5 API provided by the server
Note Valid Register will delete previous email account.</doc>
<status status="PASS" starttime="20190908 17:54:23.384" endtime="20190908 17:54:23.673"></status>
</suite>
<status status="PASS" starttime="20190908 17:54:06.811" endtime="20190908 17:54:23.677"></status>
</suite>
<statistics>
<total>
<stat pass="13" fail="0">Critical Tests</stat>
<stat pass="13" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="13" fail="0" id="s1" name="Tests">Tests</stat>
<stat pass="6" fail="0" id="s1-s1" name="Invalid Login">Tests.Invalid Login</stat>
<stat pass="3" fail="0" id="s1-s2" name="Token Timeout">Tests.Token Timeout</stat>
<stat pass="4" fail="0" id="s1-s3" name="Valid Api">Tests.Valid Api</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
